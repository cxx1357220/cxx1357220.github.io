<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>cxx的日记本</title>
  
  <subtitle>记录学习的技能和遇到的问题</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-13T13:28:02.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>cxx1357220</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>这几天是真的累</title>
    <link href="http://yoursite.com/2018/08/01/%E8%BF%99%E5%87%A0%E5%A4%A9%E6%98%AF%E7%9C%9F%E7%9A%84%E7%B4%AF/"/>
    <id>http://yoursite.com/2018/08/01/这几天是真的累/</id>
    <published>2018-08-01T03:05:04.894Z</published>
    <updated>2018-04-13T13:28:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>项目经理跟跟甲方的需求并没有沟通好，有些事还自以为是的觉得怎样怎样，反映了情况还觉得患者这样很蠢，但事实就是如此，而且还不是偶发。搞得现在产品与需求严重不符，被护士嫌弃了一下午，然后现在这方面的开发还不在，我靠，真是烦！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目经理跟跟甲方的需求并没有沟通好，有些事还自以为是的觉得怎样怎样，反映了情况还觉得患者这样很蠢，但事实就是如此，而且还不是偶发。搞得现在产品与需求严重不符，被护士嫌弃了一下午，然后现在这方面的开发还不在，我靠，真是烦！&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="mood" scheme="http://yoursite.com/tags/mood/"/>
    
  </entry>
  
  <entry>
    <title>跳跃数组</title>
    <link href="http://yoursite.com/2018/08/01/%E8%B7%B3%E8%B7%83%E6%95%B0%E7%BB%84/"/>
    <id>http://yoursite.com/2018/08/01/跳跃数组/</id>
    <published>2018-08-01T03:05:04.888Z</published>
    <updated>2018-04-27T13:46:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅供个人学习，如有错误请指出</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给定一个非负数整数数组，最初位于数组的第一个索引处。</span></span><br><span class="line"><span class="comment">//数组中的每个元素表示在该位置的最大跳跃长度。</span></span><br><span class="line"><span class="comment">//确定是否能够到达最后一个索引。</span></span><br><span class="line"><span class="comment">//示例:</span></span><br><span class="line"><span class="comment">//A = [2,3,1,1,4], 返回 true</span></span><br><span class="line"><span class="comment">//B = [2,3,1,0,4], 返回 false</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* arr_index 数组跳跃算法 &amp;&amp;testNumber(arr[0])</span></span><br><span class="line"><span class="comment">* @param &#123;Array&#125; arr 数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> arr_index=<span class="function">(<span class="params">arr</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[<span class="number">0</span>]==(arr.length<span class="number">-1</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[arr[<span class="number">0</span>]]&amp;&amp;arr[<span class="number">0</span>]!=<span class="number">0</span>)&#123; <span class="comment">//arr[arr[0]]真好用，无论是否为空，是否为正整数都解决掉了</span></span><br><span class="line">            <span class="keyword">return</span> arr_index(arr.slice(arr[<span class="number">0</span>]));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr_index([<span class="number">2</span>,,<span class="number">1</span>]));</span><br><span class="line"><span class="built_in">console</span>.log(arr_index([<span class="string">'un'</span>,<span class="number">1</span>]));</span><br><span class="line"><span class="built_in">console</span>.log(arr_index([]));</span><br><span class="line"><span class="built_in">console</span>.log(arr_index([<span class="number">1</span>]));</span><br><span class="line"><span class="built_in">console</span>.log(arr_index([<span class="number">0</span>]));</span><br><span class="line"><span class="built_in">console</span>.log(arr_index([<span class="number">2</span>,<span class="string">'UN'</span>,<span class="string">'UN'</span>]));</span><br><span class="line"><span class="built_in">console</span>.log(arr_index([<span class="number">-1</span>,<span class="string">'UN'</span>,<span class="string">'UN'</span>]));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;仅供个人学习，如有错误请指出&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s
      
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>最近写自适应想起的几个css</title>
    <link href="http://yoursite.com/2018/08/01/%E6%9C%80%E8%BF%91%E5%86%99%E8%87%AA%E9%80%82%E5%BA%94%E6%83%B3%E8%B5%B7%E7%9A%84%E5%87%A0%E4%B8%AAcss/"/>
    <id>http://yoursite.com/2018/08/01/最近写自适应想起的几个css/</id>
    <published>2018-08-01T03:05:04.880Z</published>
    <updated>2018-04-13T13:22:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vh-vw-vmin"><a href="#vh-vw-vmin" class="headerlink" title="vh vw vmin"></a>vh vw vmin</h2><p>vw为相对于视窗的宽度，vh为相对于视窗的高度，vm为相对于视窗高或者宽中的最小值。视窗的宽高为100vw,100vh。</p><h2 id="calc"><a href="#calc" class="headerlink" title="calc"></a>calc</h2><p>calc()函数支持 “+”, “-“, “*”, “/“ 运算；<br>calc()函数使用标准的数学运算优先级规则；</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;    </span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">calc</span>(100% - 10px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="media"><a href="#media" class="headerlink" title="@media"></a>@media</h2><p>针对不同的屏幕尺寸设置不同的样式，重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。</p><a id="more"></a><h4 id="一些代码"><a href="#一些代码" class="headerlink" title="一些代码"></a>一些代码</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (max-width:<span class="number">420px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">img</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width: <span class="number">420px</span>) and (max-height: <span class="number">700px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">img</span> &#123;</span><br><span class="line">        <span class="attribute">max-width</span>: <span class="number">420px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> screen and (min-width: <span class="number">700px</span>) and (min-height: <span class="number">1000px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">img</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;vh-vw-vmin&quot;&gt;&lt;a href=&quot;#vh-vw-vmin&quot; class=&quot;headerlink&quot; title=&quot;vh vw vmin&quot;&gt;&lt;/a&gt;vh vw vmin&lt;/h2&gt;&lt;p&gt;vw为相对于视窗的宽度，vh为相对于视窗的高度，vm为相对于视窗高或者宽中的最小值。视窗的宽高为100vw,100vh。&lt;/p&gt;
&lt;h2 id=&quot;calc&quot;&gt;&lt;a href=&quot;#calc&quot; class=&quot;headerlink&quot; title=&quot;calc&quot;&gt;&lt;/a&gt;calc&lt;/h2&gt;&lt;p&gt;calc()函数支持 “+”, “-“, “*”, “/“ 运算；&lt;br&gt;calc()函数使用标准的数学运算优先级规则；&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt;&amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;calc&lt;/span&gt;(100% - 10px);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;media&quot;&gt;&lt;a href=&quot;#media&quot; class=&quot;headerlink&quot; title=&quot;@media&quot;&gt;&lt;/a&gt;@media&lt;/h2&gt;&lt;p&gt;针对不同的屏幕尺寸设置不同的样式，重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>是谁扰乱了我的心弦</title>
    <link href="http://yoursite.com/2018/08/01/%E6%98%AF%E8%B0%81%E6%89%B0%E4%B9%B1%E4%BA%86%E6%88%91%E7%9A%84%E5%BF%83%E5%BC%A6/"/>
    <id>http://yoursite.com/2018/08/01/是谁扰乱了我的心弦/</id>
    <published>2018-08-01T03:05:04.873Z</published>
    <updated>2018-04-13T13:27:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/IMG_0434.JPG" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/IMG_0434.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="mood" scheme="http://yoursite.com/tags/mood/"/>
    
  </entry>
  
  <entry>
    <title>数组扁平化去重排序</title>
    <link href="http://yoursite.com/2018/08/01/%E6%89%81%E5%B9%B3%E5%8C%96%E5%8E%BB%E9%87%8D%E6%8E%92%E5%BA%8F/"/>
    <id>http://yoursite.com/2018/08/01/扁平化去重排序/</id>
    <published>2018-08-01T03:05:04.866Z</published>
    <updated>2018-04-19T05:49:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅供个人学习，如有错误请指出</p><h2 id="扁平化，去重，排序"><a href="#扁平化，去重，排序" class="headerlink" title="扁平化，去重，排序"></a>扁平化，去重，排序</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr=[[<span class="number">1</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]];</span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line"><span class="keyword">const</span> arr_sort = <span class="function"><span class="params">arr</span> =&gt;</span> arr.sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span>a - b);</span><br><span class="line"></span><br><span class="line"><span class="comment">//扁平化</span></span><br><span class="line"><span class="keyword">const</span> flat = <span class="function"><span class="params">arr</span> =&gt;</span> arr.toString().split(<span class="string">','</span>).map(<span class="function"><span class="params">x</span>=&gt;</span><span class="built_in">parseFloat</span>(x)); <span class="comment">//toString()先转化为字符串，split(',')再根据'，'号分割成字符串,map(x=&gt;parseFloat(x))最后转化为数字，从而实现扁平化</span></span><br><span class="line"><span class="keyword">const</span> flatten = <span class="function"><span class="params">arr</span> =&gt;</span> arr.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.concat(<span class="built_in">Array</span>.isArray(b) ? flatten(b) : b), []);<span class="comment">//reduce遍历，concat扁平化一层</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//es6去重</span></span><br><span class="line"><span class="keyword">const</span> removal = <span class="function"><span class="params">arr</span> =&gt;</span><span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr));<span class="comment">// new Set()去重，array.from()将set转为真正的数组</span></span><br><span class="line"><span class="keyword">const</span> rm =<span class="function"><span class="params">arr</span> =&gt;</span> [...new <span class="built_in">Set</span>(arr)]; <span class="comment">//扩展运算符也可以将set结构转化为数组</span></span><br></pre></td></tr></table></figure><h2 id="简化"><a href="#简化" class="headerlink" title="简化"></a>简化</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一种</span></span><br><span class="line"><span class="keyword">const</span> arr_handle = <span class="function"><span class="params">arr</span> =&gt;</span> <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr.toString().split(<span class="string">','</span>).map(<span class="function"><span class="params">x</span>=&gt;</span><span class="built_in">parseFloat</span>(x)))).sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span>a - b);  </span><br><span class="line"><span class="comment">//第二种</span></span><br><span class="line"><span class="keyword">const</span> arr_handle1 = <span class="function"><span class="params">arr</span> =&gt;</span> &#123;</span><br><span class="line"><span class="keyword">let</span> flatten = <span class="function"><span class="params">arr</span> =&gt;</span> arr.reduce(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a.concat(<span class="built_in">Array</span>.isArray(b)? flatten(b): b), []);</span><br><span class="line"><span class="keyword">return</span> [...new <span class="built_in">Set</span>(flatten(arr))].sort(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a &gt; b);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;仅供个人学习，如有错误请指出&lt;/p&gt;
&lt;h2 id=&quot;扁平化，去重，排序&quot;&gt;&lt;a href=&quot;#扁平化，去重，排序&quot; class=&quot;headerlink&quot; title=&quot;扁平化，去重，排序&quot;&gt;&lt;/a&gt;扁平化，去重，排序&lt;/h2&gt;&lt;figure class=&quot;highligh
      
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>vue路由基础</title>
    <link href="http://yoursite.com/2018/08/01/%E5%B5%8C%E5%A5%97%E8%B7%AF%E7%94%B1/"/>
    <id>http://yoursite.com/2018/08/01/嵌套路由/</id>
    <published>2018-08-01T03:05:04.844Z</published>
    <updated>2018-04-13T13:24:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅供个人学习，如有错误欢迎指出。</p><h2 id="vue路由"><a href="#vue路由" class="headerlink" title="vue路由"></a>vue路由</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Index <span class="keyword">from</span> <span class="string">'../pages/index.vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">'/'</span>,    <span class="comment">//默认路径</span></span><br><span class="line">        name: <span class="string">'Index'</span>,  <span class="comment">//便于路由跳转</span></span><br><span class="line">        component: Index, <span class="comment">//组件</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="vue路由跳转并获取参数"><a href="#vue路由跳转并获取参数" class="headerlink" title="vue路由跳转并获取参数"></a>vue路由跳转并获取参数</h2><h4 id="第一种方法params："><a href="#第一种方法params：" class="headerlink" title="第一种方法params："></a>第一种方法params：</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跳转传值：</span></span><br><span class="line"><span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">'Index'</span>,<span class="attr">params</span>:&#123;<span class="attr">name</span>:<span class="string">'xy'</span>,<span class="attr">age</span>:<span class="number">22</span>&#125;&#125;);</span><br><span class="line"><span class="comment">//获取参数：</span></span><br><span class="line"><span class="keyword">this</span>.$route.params.name; <span class="comment">//xy</span></span><br></pre></td></tr></table></figure><h4 id="第二种方法query"><a href="#第二种方法query" class="headerlink" title="第二种方法query:"></a>第二种方法query:</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跳转传值：</span></span><br><span class="line"><span class="keyword">this</span>.$router.push(&#123;<span class="attr">name</span>:<span class="string">'Index'</span>,<span class="attr">query</span>:&#123;<span class="attr">name</span>:<span class="string">'xy'</span>,<span class="attr">age</span>:<span class="number">22</span>&#125;&#125;);</span><br><span class="line"><span class="comment">//获取参数：</span></span><br><span class="line"><span class="keyword">this</span>.$route.query.age; <span class="comment">//22</span></span><br></pre></td></tr></table></figure><h2 id="vue嵌套路由"><a href="#vue嵌套路由" class="headerlink" title="vue嵌套路由"></a>vue嵌套路由</h2><h4 id=""><a href="#" class="headerlink" title=""></a><router-view></router-view></h4><p><router-view> 组件是一个 functional 组件，渲染路径匹配到的视图组件。<router-view> 渲染的组件还可以内嵌自己的 <router-view>，根据嵌套路径，渲染嵌套组件。借助 vue-router，使用嵌套路由，嵌套的组件children在<router-view></router-view>中渲染。</router-view></router-view></router-view></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 给视图命名可以对应渲染出口 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">"order"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Index <span class="keyword">from</span> <span class="string">'../pages/index.vue'</span></span><br><span class="line"><span class="keyword">import</span> order <span class="keyword">from</span> <span class="string">'../pages/order.vue'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">        path: <span class="string">'/'</span>,    <span class="comment">//默认路径</span></span><br><span class="line">        name: <span class="string">'Index'</span>,  <span class="comment">//便于路由跳转</span></span><br><span class="line">        component: Index, <span class="comment">//组件</span></span><br><span class="line">        children：[&#123;</span><br><span class="line">            path: <span class="string">'/'</span>,    <span class="comment">//'/'下，默认加载</span></span><br><span class="line">            name: <span class="string">'order'</span>,  <span class="comment">//便于路由跳转</span></span><br><span class="line">            component: &#123;</span><br><span class="line">                <span class="keyword">default</span>: order, <span class="comment">//组件,没有name的&lt;router-view&gt;默认的为default</span></span><br><span class="line">                order: order  <span class="comment">//对应name='order'的&lt;router-view&gt;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅供个人学习，如有错误欢迎指出。&lt;/p&gt;
&lt;h2 id=&quot;vue路由&quot;&gt;&lt;a href=&quot;#vue路由&quot; class=&quot;headerlink&quot; title=&quot;vue路由&quot;&gt;&lt;/a&gt;vue路由&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Index &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../pages/index.vue&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Router(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  routes: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path: &lt;span class=&quot;string&quot;&gt;&#39;/&#39;&lt;/span&gt;,    &lt;span class=&quot;comment&quot;&gt;//默认路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name: &lt;span class=&quot;string&quot;&gt;&#39;Index&#39;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//便于路由跳转&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        component: Index, &lt;span class=&quot;comment&quot;&gt;//组件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>慢慢逝去的一天</title>
    <link href="http://yoursite.com/2018/08/01/%E5%A4%B1%E5%8E%BB%E7%9A%84%E4%B8%80%E5%A4%A9/"/>
    <id>http://yoursite.com/2018/08/01/失去的一天/</id>
    <published>2018-08-01T03:05:04.837Z</published>
    <updated>2018-04-27T13:43:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>看了一天微信小游戏，得了个结论：先看小程序吧。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看了一天微信小游戏，得了个结论：先看小程序吧。。。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="mood" scheme="http://yoursite.com/tags/mood/"/>
    
  </entry>
  
  <entry>
    <title>处理移动端click事件300毫秒延迟</title>
    <link href="http://yoursite.com/2018/08/01/%E5%A4%84%E7%90%86%E7%A7%BB%E5%8A%A8%E7%AB%AFclick%E4%BA%8B%E4%BB%B6300%E6%AF%AB%E7%A7%92%E5%BB%B6%E8%BF%9F/"/>
    <id>http://yoursite.com/2018/08/01/处理移动端click事件300毫秒延迟/</id>
    <published>2018-08-01T03:05:04.831Z</published>
    <updated>2018-04-13T13:25:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅为个人学习之用，如有错误欢迎指出</p><p>从点击屏幕上的元素到触发元素的 click 事件，移动浏览器会有大约 300 毫秒的等待时间。为什么这么设计呢？ 因为它想看看你是不是要进行双击（double tap）操作。</p><h2 id="FastClick"><a href="#FastClick" class="headerlink" title="FastClick"></a>FastClick</h2><p>FastClick是移动端click事件300毫秒延迟的一种解决方案。<br><a href="https://github.com/ftlabs/fastclick/blob/master/lib/fastclick.js" target="_blank" rel="noopener">github地址</a></p><a id="more"></a><h4 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h4><p>在vue的安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install fastclick --save</span><br></pre></td></tr></table></figure><p>在vue的使用：main.js文件中引入并绑定到body中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> FastClick <span class="keyword">from</span> <span class="string">'fastclick'</span></span><br><span class="line">FastClick.attach(<span class="built_in">document</span>.body)</span><br></pre></td></tr></table></figure><h4 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h4><p>在jQuery的安装应用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入FastClick.js文件</span></span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">FastClick.attach(<span class="built_in">document</span>.body);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="普通模式"><a href="#普通模式" class="headerlink" title="普通模式"></a>普通模式</h4><p>在基础js下安装使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入FastClick.js文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;   </span><br><span class="line">    FastClick.attach( <span class="built_in">document</span>.body );  </span><br><span class="line">&#125;,<span class="literal">false</span> );</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅为个人学习之用，如有错误欢迎指出&lt;/p&gt;
&lt;p&gt;从点击屏幕上的元素到触发元素的 click 事件，移动浏览器会有大约 300 毫秒的等待时间。为什么这么设计呢？ 因为它想看看你是不是要进行双击（double tap）操作。&lt;/p&gt;
&lt;h2 id=&quot;FastClick&quot;&gt;&lt;a href=&quot;#FastClick&quot; class=&quot;headerlink&quot; title=&quot;FastClick&quot;&gt;&lt;/a&gt;FastClick&lt;/h2&gt;&lt;p&gt;FastClick是移动端click事件300毫秒延迟的一种解决方案。&lt;br&gt;&lt;a href=&quot;https://github.com/ftlabs/fastclick/blob/master/lib/fastclick.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>为啥不随便用for-in</title>
    <link href="http://yoursite.com/2018/08/01/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%85%8E%E7%94%A8for-in/"/>
    <id>http://yoursite.com/2018/08/01/为什么慎用for-in/</id>
    <published>2018-08-01T03:05:04.823Z</published>
    <updated>2018-04-17T13:13:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅供个人学习，如有错误请指出</p><h2 id="for-in的输出排序"><a href="#for-in的输出排序" class="headerlink" title="for-in的输出排序"></a>for-in的输出排序</h2><p>当数组中有0和正整数的key时，输出排序被改变，因为for-in会先对这些keys进行排序<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">    <span class="string">"first"</span>:<span class="string">"first"</span>,</span><br><span class="line">    <span class="string">"3.1"</span>:<span class="string">"3.1"</span>,</span><br><span class="line">    <span class="string">"-2"</span>:<span class="string">"-2"</span>,</span><br><span class="line">    <span class="string">"34"</span>:<span class="string">"34"</span>,</span><br><span class="line">    <span class="string">"1"</span>:<span class="string">"1"</span>,</span><br><span class="line">    <span class="string">"second"</span>:<span class="string">"second"</span>,</span><br><span class="line">    <span class="string">'001'</span>:<span class="string">'001'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj) &#123; <span class="built_in">console</span>.log(i); &#125;;</span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="comment">//34</span></span><br><span class="line"><span class="comment">//first</span></span><br><span class="line"><span class="comment">//3.1</span></span><br><span class="line"><span class="comment">//-2</span></span><br><span class="line"><span class="comment">//second</span></span><br><span class="line"><span class="comment">//001</span></span><br></pre></td></tr></table></figure></p><h2 id="不想改变排序那怎么办"><a href="#不想改变排序那怎么办" class="headerlink" title="不想改变排序那怎么办"></a>不想改变排序那怎么办</h2><p>我还没找到方法，只能希望key不是0和正整数了。</p><a id="more"></a><h2 id="for-in对属性的操作"><a href="#for-in对属性的操作" class="headerlink" title="for-in对属性的操作"></a>for-in对属性的操作</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">    <span class="string">"first"</span>:<span class="string">"first"</span>,</span><br><span class="line">    <span class="string">"3.1"</span>:<span class="string">"3.1"</span>,</span><br><span class="line">    <span class="string">"-2"</span>:<span class="string">"-2"</span>,</span><br><span class="line">    <span class="string">"34"</span>:<span class="string">"34"</span>,</span><br><span class="line">    <span class="string">"1"</span>:<span class="string">"1"</span>,</span><br><span class="line">    <span class="string">"second"</span>:<span class="string">"second"</span>,</span><br><span class="line">    <span class="string">'001'</span>:<span class="string">'001'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Object</span>.prototype.age=<span class="number">13</span>;  <span class="comment">//给所有object添加属性age等于13</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj) &#123; <span class="built_in">console</span>.log(i+<span class="string">":"</span>+obj[i]); &#125;;</span><br><span class="line"><span class="comment">//1:1</span></span><br><span class="line"><span class="comment">//34:34</span></span><br><span class="line"><span class="comment">//first:first</span></span><br><span class="line"><span class="comment">//3.1:3.1</span></span><br><span class="line"><span class="comment">//-2:-2</span></span><br><span class="line"><span class="comment">//second:second</span></span><br><span class="line"><span class="comment">//001:001</span></span><br><span class="line"><span class="comment">//age:13 //把属性输出了。。。</span></span><br></pre></td></tr></table></figure><h2 id="不想输出属性那怎么办"><a href="#不想输出属性那怎么办" class="headerlink" title="不想输出属性那怎么办"></a>不想输出属性那怎么办</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">    <span class="string">"first"</span>:<span class="string">"first"</span>,</span><br><span class="line">    <span class="string">"3.1"</span>:<span class="string">"3.1"</span>,</span><br><span class="line">    <span class="string">"-2"</span>:<span class="string">"-2"</span>,</span><br><span class="line">    <span class="string">"34"</span>:<span class="string">"34"</span>,</span><br><span class="line">    <span class="string">"1"</span>:<span class="string">"1"</span>,</span><br><span class="line">    <span class="string">"second"</span>:<span class="string">"second"</span>,</span><br><span class="line">    <span class="string">'001'</span>:<span class="string">'001'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Object</span>.prototype.age=<span class="number">13</span>;  </span><br><span class="line"><span class="built_in">Object</span>.keys(obj);<span class="comment">//Object.getOwnPropertyNames(obj);同效果</span></span><br><span class="line"><span class="comment">//(7) ["1", "34", "first", "3.1", "-2", "second", "001"]</span></span><br></pre></td></tr></table></figure><h2 id="说那么多，我只要value"><a href="#说那么多，我只要value" class="headerlink" title="说那么多，我只要value"></a>说那么多，我只要value</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj=&#123;</span><br><span class="line">    <span class="string">"first"</span>:<span class="string">"first"</span>,</span><br><span class="line">    <span class="string">"3.1"</span>:<span class="string">"3.1"</span>,</span><br><span class="line">    <span class="string">"-2"</span>:<span class="string">"-2"</span>,</span><br><span class="line">    <span class="string">"34"</span>:<span class="string">"34"</span>,</span><br><span class="line">    <span class="string">"1"</span>:<span class="string">"1"</span>,</span><br><span class="line">    <span class="string">"second"</span>:<span class="string">"second"</span>,</span><br><span class="line">    <span class="string">'001'</span>:<span class="string">'001'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Object</span>.prototype.age=<span class="number">13</span>;  </span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">of</span> <span class="built_in">Object</span>.keys(obj)) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(key + <span class="string">': '</span> + obj[key]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1: 1</span></span><br><span class="line"><span class="comment">//34: 34</span></span><br><span class="line"><span class="comment">//first: first</span></span><br><span class="line"><span class="comment">//3.1: 3.1</span></span><br><span class="line"><span class="comment">//-2: -2</span></span><br><span class="line"><span class="comment">//second: second</span></span><br><span class="line"><span class="comment">//001: 001</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.values(obj);</span><br><span class="line"><span class="comment">//(7) ["1", "34", "first", "3.1", "-2", "second", "001"]</span></span><br></pre></td></tr></table></figure><h2 id="对象都那么麻烦，数组呢"><a href="#对象都那么麻烦，数组呢" class="headerlink" title="对象都那么麻烦，数组呢"></a>对象都那么麻烦，数组呢</h2><p>用都不要用，for-in就是为了对象设计的，用于对象都挺麻烦的。</p><p>用在数组上有更方便高效的方法：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myArray = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> index = <span class="number">0</span>; index &lt; myArray.length; index++) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(myArray[index]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i <span class="keyword">of</span> myArray) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>偏偏是最原始的方法效率高，for-of看起来整洁，但效率比for要低。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> n = <span class="number">10000</span>;</span><br><span class="line"><span class="comment">// 准备待测数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> count=<span class="number">0</span>;count&lt;n;count++)&#123;</span><br><span class="line">    arr[count] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// for 测试</span></span><br><span class="line"><span class="built_in">console</span>.time(<span class="string">'for'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">    arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.timeEnd(<span class="string">'for'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// for in 测试</span></span><br><span class="line"><span class="built_in">console</span>.time(<span class="string">'for of'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> item <span class="keyword">of</span> arr)&#123;</span><br><span class="line">    arr[item];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.timeEnd(<span class="string">'for of'</span>);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅供个人学习，如有错误请指出&lt;/p&gt;
&lt;h2 id=&quot;for-in的输出排序&quot;&gt;&lt;a href=&quot;#for-in的输出排序&quot; class=&quot;headerlink&quot; title=&quot;for-in的输出排序&quot;&gt;&lt;/a&gt;for-in的输出排序&lt;/h2&gt;&lt;p&gt;当数组中有0和正整数的key时，输出排序被改变，因为for-in会先对这些keys进行排序&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;3.1&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;3.1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;-2&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;-2&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;34&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;34&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;second&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;second&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;001&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;001&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; obj) &amp;#123; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i); &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//34&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//first&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//3.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//-2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//second&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;不想改变排序那怎么办&quot;&gt;&lt;a href=&quot;#不想改变排序那怎么办&quot; class=&quot;headerlink&quot; title=&quot;不想改变排序那怎么办&quot;&gt;&lt;/a&gt;不想改变排序那怎么办&lt;/h2&gt;&lt;p&gt;我还没找到方法，只能希望key不是0和正整数了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>yaf默认路由学习</title>
    <link href="http://yoursite.com/2018/08/01/yaf%E9%BB%98%E8%AE%A4%E8%B7%AF%E7%94%B1%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/08/01/yaf默认路由学习/</id>
    <published>2018-08-01T03:05:04.814Z</published>
    <updated>2018-04-13T13:24:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅为个人学习之用，如有错误，欢迎指出。</p><h2 id="yaf为mvc框架"><a href="#yaf为mvc框架" class="headerlink" title="yaf为mvc框架"></a>yaf为mvc框架</h2><p>yaf默认的路由协议Yaf_Route_Static, 就是分析请求中的request_uri, 在去除掉base_uri以后, 获取到真正的负载路由信息的request_uri片段, 具体的策略是, 根据”/“对request_uri分段, 依次得到Module,Controller,Action。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">- index.php <span class="comment">//入口文件  </span></span><br><span class="line">- .htaccess <span class="comment">//重写规则      </span></span><br><span class="line">+ conf  </span><br><span class="line">  - application.ini <span class="comment">//配置文件，新建模块需要事先在里边声明     </span></span><br><span class="line">application/  </span><br><span class="line">  + controllers  </span><br><span class="line">     - Index.php <span class="comment">//默认控制器  </span></span><br><span class="line">  + views      </span><br><span class="line">      + index   <span class="comment">//控制器  </span></span><br><span class="line">        - index.phtml <span class="comment">//默认视图  </span></span><br><span class="line">  + modules <span class="comment">//其他模块 </span></span><br><span class="line">     + Admin  <span class="comment">//模块Module</span></span><br><span class="line">        + controllers  </span><br><span class="line">           - User.php <span class="comment">//控制器Controller,在里编写了Action，indexAction控制index.phtml</span></span><br><span class="line">        + views      </span><br><span class="line">           + user   <span class="comment">//控制器  </span></span><br><span class="line">              - index.twig <span class="comment">//视图，默认为.phtml可以通过插件换为html，twig</span></span><br><span class="line">  - library  <span class="comment">//本地类库</span></span><br><span class="line">  - models  <span class="comment">//model目录  </span></span><br><span class="line">  - plugins <span class="comment">//插件目录</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="yaf新建模块声明"><a href="#yaf新建模块声明" class="headerlink" title="yaf新建模块声明"></a>yaf新建模块声明</h2><p>在conf/application.ini中修改加上：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">application.modules = Index,Admin</span><br></pre></td></tr></table></figure><h2 id="控制器Controller"><a href="#控制器Controller" class="headerlink" title="控制器Controller"></a>控制器Controller</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Controller</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserController</span> <span class="keyword">extends</span> <span class="title">ControllerAbstract</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * index的Action</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">indexAction</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;getView()-&gt;assign(<span class="string">'refundFee'</span>, <span class="string">'123'</span>); <span class="comment">//输出到页面</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="视图index-twig"><a href="#视图index-twig" class="headerlink" title="视图index.twig"></a>视图index.twig</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 输出123 --&gt;</span></span><br><span class="line">&#123;&#123;refundFee&#125;&#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="访问地址"><a href="#访问地址" class="headerlink" title="访问地址"></a>访问地址</h2><p>http:// .base_uri. /admin/user/index</p><h2 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h2><p>该地址不需要绑定视图也可以直接访问。</p><p>Controller和Action：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Controller</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserController</span> <span class="keyword">extends</span> <span class="title">ControllerAbstract</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * index的Action</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">indexAction</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;getView()-&gt;assign(<span class="string">'refundFee'</span>, <span class="string">'123'</span>); <span class="comment">//输出到页面</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 加载应用列表</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">appAction</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $apptable=MessageConfigModel::all(); <span class="comment">//查询</span></span><br><span class="line">        $result = [<span class="string">'code'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'查询成功'</span>, <span class="string">'data'</span> =&gt; $apptable];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;out($result);  <span class="comment">//json输出</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问地址：http:// .base_uri. /admin/user/app 得到的：</p><p>{“code”:0,”msg”:”查询成功”,”data”:[…]}</p><p>一般用于请求，例如ajax请求：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">'http:// .base_uri. /admin/user/app'</span>,</span><br><span class="line">    type:<span class="string">'POST'</span>,</span><br><span class="line">    dataType:<span class="string">'JSON'</span>,</span><br><span class="line">    data:&#123;&#125;,</span><br><span class="line">    <span class="keyword">async</span>:<span class="literal">false</span>,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(data);   <span class="comment">//&#123;code:0,msg:'查询成功',data:[...]&#125;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    error:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h2><p><a href="http://www.laruence.com/manual/yaf.routes.static.html" target="_blank" rel="noopener">官方文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅为个人学习之用，如有错误，欢迎指出。&lt;/p&gt;
&lt;h2 id=&quot;yaf为mvc框架&quot;&gt;&lt;a href=&quot;#yaf为mvc框架&quot; class=&quot;headerlink&quot; title=&quot;yaf为mvc框架&quot;&gt;&lt;/a&gt;yaf为mvc框架&lt;/h2&gt;&lt;p&gt;yaf默认的路由协议Yaf_Route_Static, 就是分析请求中的request_uri, 在去除掉base_uri以后, 获取到真正的负载路由信息的request_uri片段, 具体的策略是, 根据”/“对request_uri分段, 依次得到Module,Controller,Action。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- index.php &lt;span class=&quot;comment&quot;&gt;//入口文件  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- .htaccess &lt;span class=&quot;comment&quot;&gt;//重写规则      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ conf  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - application.ini &lt;span class=&quot;comment&quot;&gt;//配置文件，新建模块需要事先在里边声明     &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;application/  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  + controllers  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     - Index.php &lt;span class=&quot;comment&quot;&gt;//默认控制器  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  + views      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      + index   &lt;span class=&quot;comment&quot;&gt;//控制器  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - index.phtml &lt;span class=&quot;comment&quot;&gt;//默认视图  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  + modules &lt;span class=&quot;comment&quot;&gt;//其他模块 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     + Admin  &lt;span class=&quot;comment&quot;&gt;//模块Module&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + controllers  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           - User.php &lt;span class=&quot;comment&quot;&gt;//控制器Controller,在里编写了Action，indexAction控制index.phtml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        + views      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           + user   &lt;span class=&quot;comment&quot;&gt;//控制器  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              - index.twig &lt;span class=&quot;comment&quot;&gt;//视图，默认为.phtml可以通过插件换为html，twig&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - library  &lt;span class=&quot;comment&quot;&gt;//本地类库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - models  &lt;span class=&quot;comment&quot;&gt;//model目录  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  - plugins &lt;span class=&quot;comment&quot;&gt;//插件目录&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="yaf" scheme="http://yoursite.com/tags/yaf/"/>
    
  </entry>
  
  <entry>
    <title>微信H5支付</title>
    <link href="http://yoursite.com/2018/08/01/wx_H5_pay/"/>
    <id>http://yoursite.com/2018/08/01/wx_H5_pay/</id>
    <published>2018-08-01T03:05:04.804Z</published>
    <updated>2018-04-13T13:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅为个人学习之用，如有错误欢迎指出</p><p>看了好久微信文档，心里万马奔腾。</p><h4 id="先获取用户code"><a href="#先获取用户code" class="headerlink" title="先获取用户code"></a>先获取用户code</h4><p><a href="https://mp.weixin.qq.com/wiki?action=doc&amp;id=mp1421140842&amp;t=0.8761570054860548#4" target="_blank" rel="noopener">官方文档</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;redirect_uri=REDIRECT_URL&amp;response_type=code&amp;scope=snsapi_base#wechat_redirect</span><br></pre></td></tr></table></figure></p><p>参数说明：<br>appid：公众号的唯一标识，可以登录到公众平台查看<br>redirect_uri：授权后重定向的回调链接地址，先使用 urlEncode 对链接进行处理，打开个在线转译的转成urlEncode粘贴过来就行了。<br>response_type：返回类型，请填写code，必须是’code’。<br>scope：应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）<br>state：重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节（非必需）。</p><p>#wechat_redirect：无论直接打开还是做页面302重定向时候，必须带此参数（必须）。</p><a id="more"></a><h4 id="根据用户code获取用户与公众号之间关系的openid"><a href="#根据用户code获取用户与公众号之间关系的openid" class="headerlink" title="根据用户code获取用户与公众号之间关系的openid"></a>根据用户code获取用户与公众号之间关系的openid</h4><p><a href="https://mp.weixin.qq.com/wiki?action=doc&amp;id=mp1421140842&amp;t=0.8761570054860548#4" target="_blank" rel="noopener">官方文档</a><br>请求该地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.weixin.qq.com/sns/oauth2/access_token?appid=APPID&amp;secret=SECRET&amp;code=CODE&amp;grant_type=authorization_code</span><br></pre></td></tr></table></figure></p><p>参数说明：<br>appid：公众号的唯一标识，可以登录到公众平台查看。<br>secret：公众号的appsecret，可以登录到公众平台查看。<br>code：填写第一步获取的code参数。<br>grant_type：填写为authorization_code，必须是’authorization_code’。</p><p>返回值为json数组：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="string">"access_token"</span>:<span class="string">"ACCESS_TOKEN"</span>,     <span class="comment">//网页授权接口调用凭证</span></span><br><span class="line"><span class="string">"expires_in"</span>:<span class="number">7200</span>,                   <span class="comment">//access_token接口调用凭证超时时间</span></span><br><span class="line"><span class="string">"refresh_token"</span>:<span class="string">"REFRESH_TOKEN"</span>,     <span class="comment">//用户刷新access_token</span></span><br><span class="line"><span class="string">"openid"</span>:<span class="string">"OPENID"</span>,                   <span class="comment">//根据用户code获取用户与公众号之间关系的openid</span></span><br><span class="line"><span class="string">"scope"</span>:<span class="string">"SCOPE"</span> &#125;                    <span class="comment">//用户授权的作用域，使用逗号（,）分隔</span></span><br></pre></td></tr></table></figure></p><h4 id="根据openid获取到预支付交易会话标识prepay-id"><a href="#根据openid获取到预支付交易会话标识prepay-id" class="headerlink" title="根据openid获取到预支付交易会话标识prepay_id"></a>根据openid获取到预支付交易会话标识prepay_id</h4><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1" target="_blank" rel="noopener">官方文档</a><br>请求该地址返回prepay_id<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.mch.weixin.qq.com/pay/unifiedorder</span><br></pre></td></tr></table></figure></p><p>参数说明：<br>xml串：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">appid</span>&gt;</span>wx2421b1c4370ec43b<span class="tag">&lt;/<span class="name">appid</span>&gt;</span>   微信支付分配的公众账号ID</span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span>nfyy<span class="tag">&lt;/<span class="name">body</span>&gt;</span>                    商品描述</span><br><span class="line">   <span class="tag">&lt;<span class="name">mch_id</span>&gt;</span>10000100<span class="tag">&lt;/<span class="name">mch_id</span>&gt;</span>            微信支付分配的商户号</span><br><span class="line">   <span class="tag">&lt;<span class="name">nonce_str</span>&gt;</span>1add1a30ac87aa2db72f57a2375d8fec<span class="tag">&lt;/<span class="name">nonce_str</span>&gt;</span>         随机字符串32位以内</span><br><span class="line">   <span class="tag">&lt;<span class="name">notify_url</span>&gt;</span>http://www.baidu.php<span class="tag">&lt;/<span class="name">notify_url</span>&gt;</span>    异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数。</span><br><span class="line">   <span class="tag">&lt;<span class="name">openid</span>&gt;</span>oUpF8uMuAJO_M2pxb1Q9zNjWeS6o<span class="tag">&lt;/<span class="name">openid</span>&gt;</span>    微信用户在商户对应appid下的唯一标识</span><br><span class="line">   <span class="tag">&lt;<span class="name">out_trade_no</span>&gt;</span>1415659990<span class="tag">&lt;/<span class="name">out_trade_no</span>&gt;</span>          商户订单号，同商户下唯一</span><br><span class="line">   <span class="tag">&lt;<span class="name">spbill_create_ip</span>&gt;</span>14.23.150.211<span class="tag">&lt;/<span class="name">spbill_create_ip</span>&gt;</span>   用户ip地址</span><br><span class="line">   <span class="tag">&lt;<span class="name">total_fee</span>&gt;</span>1<span class="tag">&lt;/<span class="name">total_fee</span>&gt;</span>                         交易金额，只能为正整数，不能有千分位，单位为分。</span><br><span class="line">   <span class="tag">&lt;<span class="name">trade_type</span>&gt;</span>JSAPI<span class="tag">&lt;/<span class="name">trade_type</span>&gt;</span>                   交易类型，JSAPI为公众号支付</span><br><span class="line">   <span class="tag">&lt;<span class="name">sign</span>&gt;</span>0CB01533B8C1EF103065174F50BCA001<span class="tag">&lt;/<span class="name">sign</span>&gt;</span>    签名，根据以上的参数和公众号商户的唯一密匙key拼接加密而成</span><br><span class="line"><span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这边有两个问题，一个是用户ip的获取，一个是签名生成的方法，还有个坑就是，里边必须为UTF-8格式，不然会报错。</p><h4 id="获取用户的ip（spbill-create-ip）"><a href="#获取用户的ip（spbill-create-ip）" class="headerlink" title="获取用户的ip（spbill_create_ip）"></a>获取用户的ip（spbill_create_ip）</h4><p>在后端php实现<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_client_ip</span><span class="params">($type = <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">    $type       =  $type ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">static</span> $ip  =   <span class="keyword">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> ($ip !== <span class="keyword">NULL</span>) <span class="keyword">return</span> $ip[$type];</span><br><span class="line">    <span class="keyword">if</span>($_SERVER[<span class="string">'HTTP_X_REAL_IP'</span>])&#123;<span class="comment">//nginx 代理模式下，获取客户端真实IP</span></span><br><span class="line">        $ip=$_SERVER[<span class="string">'HTTP_X_REAL_IP'</span>];     </span><br><span class="line">    &#125;<span class="keyword">elseif</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_CLIENT_IP'</span>])) &#123;<span class="comment">//客户端的ip</span></span><br><span class="line">        $ip     =   $_SERVER[<span class="string">'HTTP_CLIENT_IP'</span>];</span><br><span class="line">    &#125;<span class="keyword">elseif</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>])) &#123;<span class="comment">//浏览当前页面的用户计算机的网关</span></span><br><span class="line">        $arr    =   explode(<span class="string">','</span>, $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]);</span><br><span class="line">        $pos    =   array_search(<span class="string">'unknown'</span>,$arr);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">false</span> !== $pos) <span class="keyword">unset</span>($arr[$pos]);</span><br><span class="line">        $ip     =   trim($arr[<span class="number">0</span>]);</span><br><span class="line">    &#125;<span class="keyword">elseif</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>])) &#123;</span><br><span class="line">        $ip     =   $_SERVER[<span class="string">'REMOTE_ADDR'</span>];<span class="comment">//浏览当前页面的用户计算机的ip地址</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $ip=$_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// IP地址合法验证</span></span><br><span class="line">    $long = sprintf(<span class="string">"%u"</span>,ip2long($ip));</span><br><span class="line">    $ip   = $long ? <span class="keyword">array</span>($ip, $long) : <span class="keyword">array</span>(<span class="string">'0.0.0.0'</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> $ip[$type];</span><br><span class="line">&#125;</span><br><span class="line">$user_ip = get_client_ip();   <span class="comment">//获取ip到$user_ip</span></span><br></pre></td></tr></table></figure></p><h4 id="签名算法"><a href="#签名算法" class="headerlink" title="签名算法"></a>签名算法</h4><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=4_3" target="_blank" rel="noopener">官方文档</a><br><a href="https://pay.weixin.qq.com/wiki/tools/signverify/" target="_blank" rel="noopener">测试地址</a><br>◆ 参数名ASCII码从小到大排序（字典序）；<br>◆ 如果参数的值为空不参与签名；<br>◆ 参数名区分大小写；<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$data = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'appid'</span> =&gt; <span class="string">'wx2421b1c4370ec43b'</span>,   <span class="comment">//微信支付分配的公众账号ID</span></span><br><span class="line">    <span class="string">'body'</span> =&gt; <span class="string">'nfyy'</span>,             <span class="comment">//商品描述</span></span><br><span class="line">    <span class="string">'mch_id'</span> =&gt;  <span class="string">'10000100'</span>,        <span class="comment">//微信支付分配的商户号</span></span><br><span class="line">    <span class="string">'nonce_str'</span> =&gt; <span class="string">'1add1a30ac87aa2db72f57a2375d8fec'</span>,           <span class="comment">//随机字符串</span></span><br><span class="line">    <span class="string">'notify_url'</span> =&gt; <span class="string">'http://www.baidu.php'</span>,    <span class="comment">//异步回调地址</span></span><br><span class="line">    <span class="string">'out_trade_no'</span> =&gt; <span class="string">'1415659990'</span>           <span class="comment">//商户订单号，同商户下唯一</span></span><br><span class="line">    <span class="string">'openid'</span> =&gt; <span class="string">'oUpF8uMuAJO_M2pxb1Q9zNjWeS6o'</span>,        <span class="comment">//用户登录时获取的code中含有的值</span></span><br><span class="line">    <span class="string">'spbill_create_ip'</span> =&gt; $user_ip,           <span class="comment">//网页支付提交用户端ip</span></span><br><span class="line">    <span class="string">'total_fee'</span> =&gt; <span class="number">0.01</span> * <span class="number">100</span>,                  <span class="comment">//订单总额单位为分</span></span><br><span class="line">    <span class="string">'trade_type'</span> =&gt; <span class="string">'JSAPI'</span>           <span class="comment">//交易类型</span></span><br><span class="line">);</span><br><span class="line">$key = <span class="string">'z4hgl4cnk5p0x3aiy2ycf5ac2wl3msie'</span>; <span class="comment">//商户秘钥</span></span><br><span class="line">ksort($data);    <span class="comment">//按照参数名ASCII码从小到大排序（字典序）；</span></span><br><span class="line">$joint = <span class="string">""</span>;      <span class="comment">//拼接</span></span><br><span class="line"><span class="keyword">foreach</span> ($data <span class="keyword">as</span> $k =&gt; $v) &#123;    <span class="comment">//循环拼接</span></span><br><span class="line">    $joint .= $k . <span class="string">"="</span> . $v . <span class="string">"&amp;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$stringSignTemp = $joint.<span class="string">"key="</span>.$key;   <span class="comment">//加上商户密匙</span></span><br><span class="line">$sign=MD5($stringSignTemp);<span class="comment">//MD5加密</span></span><br><span class="line">$sign=strtoupper($sign); <span class="comment">//转为大写</span></span><br><span class="line">$data[<span class="string">'sign'</span>] = $sign;   <span class="comment">//加到数组中去</span></span><br></pre></td></tr></table></figure></p><h4 id="prepay-id返回值"><a href="#prepay-id返回值" class="headerlink" title="prepay_id返回值"></a>prepay_id返回值</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;</span><br><span class="line">   &lt;return_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/return_code&gt;</span><br><span class="line">   &lt;return_msg&gt;&lt;![CDATA[OK]]&gt;&lt;/return_msg&gt;</span><br><span class="line">   &lt;appid&gt;&lt;![CDATA[wx2421b1c4370ec43b]]&gt;&lt;/appid&gt;</span><br><span class="line">   &lt;mch_id&gt;&lt;![CDATA[<span class="number">10000100</span>]]&gt;&lt;/mch_id&gt;</span><br><span class="line">   &lt;nonce_str&gt;&lt;![CDATA[IITRi8Iabbblz1Jc]]&gt;&lt;/nonce_str&gt;</span><br><span class="line">   &lt;openid&gt;&lt;![CDATA[oUpF8uMuAJO_M2pxb1Q9zNjWeS6o]]&gt;&lt;/openid&gt;</span><br><span class="line">   &lt;sign&gt;&lt;![CDATA[<span class="number">7921E432</span>F65EB8ED0CE9755F0E86D72F]]&gt;&lt;/sign&gt;</span><br><span class="line">   &lt;result_code&gt;&lt;![CDATA[SUCCESS]]&gt;&lt;/result_code&gt;</span><br><span class="line">   &lt;prepay_id&gt;&lt;![CDATA[wx201411101639507cbf6ffd8b0779950874]]&gt;&lt;/prepay_id&gt;</span><br><span class="line">   &lt;trade_type&gt;&lt;![CDATA[JSAPI]]&gt;&lt;/trade_type&gt;</span><br><span class="line">&lt;/xml&gt;</span><br><span class="line">$str = Tools::curl($url,<span class="string">'POST'</span>,$xml);  <span class="comment">//获取返回的xml串</span></span><br><span class="line">$obj = simplexml_load_string($str, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA);   <span class="comment">//精简掉cdata</span></span><br><span class="line">$eJSON = json_encode($obj);     <span class="comment">//转化为json数组</span></span><br><span class="line">$dJSON = json_decode($eJSON);   <span class="comment">//转化为json数组</span></span><br><span class="line">$prepay_id = $dJSON-&gt;prepay_id;<span class="comment">//获取"prepay_id"对应的值</span></span><br></pre></td></tr></table></figure><h4 id="调用微信的支付"><a href="#调用微信的支付" class="headerlink" title="调用微信的支付"></a>调用微信的支付</h4><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&amp;index=6" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$timeStamp=time();</span><br><span class="line">$dataend = <span class="keyword">array</span>( </span><br><span class="line">    <span class="string">'appId'</span> =&gt; $app_id,     <span class="comment">//微信支付分配的公众账号ID</span></span><br><span class="line">    <span class="string">'timeStamp'</span> =&gt;$timeStamp,    <span class="comment">//时间戳</span></span><br><span class="line">    <span class="string">'nonceStr'</span> =&gt; $nonceStr,    <span class="comment">//随机的32位一下数</span></span><br><span class="line">    <span class="string">'package'</span> =&gt; <span class="string">'prepay_id='</span> . $prepay_id,  <span class="comment">//新获取的</span></span><br><span class="line">    <span class="string">'signType'</span> =&gt; <span class="string">'MD5'</span>, <span class="comment">//加密方式</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onBridgeReady</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   WeixinJSBridge.invoke(</span><br><span class="line">       <span class="string">'getBrandWCPayRequest'</span>, &#123;</span><br><span class="line">           <span class="string">"appId"</span>:&#123;&#123;appId&#125;&#125;,     <span class="comment">//公众号名称，由商户传入     </span></span><br><span class="line">           <span class="string">"timeStamp"</span>:&#123;&#123;timeStamp&#125;&#125;,         <span class="comment">//时间戳，自1970年以来的秒数     </span></span><br><span class="line">           <span class="string">"nonceStr"</span>:&#123;&#123;nonceStr&#125;&#125;,   <span class="comment">//随机串     </span></span><br><span class="line">           <span class="string">"package"</span>:&#123;&#123;package&#125;&#125;,     </span><br><span class="line">           <span class="string">"signType"</span>:<span class="string">"MD5"</span>,         <span class="comment">//微信签名方式：     </span></span><br><span class="line">           <span class="string">"paySign"</span>:&#123;&#123;paySign&#125;&#125; <span class="comment">//微信签名 </span></span><br><span class="line">       &#125;,</span><br><span class="line">       <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;     </span><br><span class="line">           <span class="keyword">if</span>(res.err_msg == <span class="string">"get_brand_wcpay_request:ok"</span> ) &#123;&#125;     <span class="comment">// 使用以上方式判断前端返回,微信团队郑重提示：res.err_msg将在用户支付成功后返回    ok，但并不保证它绝对可靠。 </span></span><br><span class="line">       &#125;</span><br><span class="line">   ); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> WeixinJSBridge == <span class="string">"undefined"</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>( <span class="built_in">document</span>.addEventListener )&#123;</span><br><span class="line">       <span class="built_in">document</span>.addEventListener(<span class="string">'WeixinJSBridgeReady'</span>, onBridgeReady, <span class="literal">false</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.attachEvent)&#123;</span><br><span class="line">       <span class="built_in">document</span>.attachEvent(<span class="string">'WeixinJSBridgeReady'</span>, onBridgeReady); </span><br><span class="line">       <span class="built_in">document</span>.attachEvent(<span class="string">'onWeixinJSBridgeReady'</span>, onBridgeReady);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">   onBridgeReady();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//成了</span></span><br></pre></td></tr></table></figure><h5 id="获取时间戳"><a href="#获取时间戳" class="headerlink" title="获取时间戳"></a>获取时间戳</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$timeStamp=time();   <span class="comment">//获取时间戳</span></span><br></pre></td></tr></table></figure><h5 id="随机生成32位码"><a href="#随机生成32位码" class="headerlink" title="随机生成32位码"></a>随机生成32位码</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getRandom</span><span class="params">($param)</span></span>&#123; <span class="comment">//生成$param位随机数</span></span><br><span class="line">    $str=<span class="string">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"</span>;</span><br><span class="line">    $strkey = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;$param;$i++)</span><br><span class="line">    &#123;</span><br><span class="line">        $strkey .= $str&#123;mt_rand(<span class="number">0</span>,<span class="number">32</span>)&#125;;    <span class="comment">//生成php随机数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $strkey;</span><br><span class="line">&#125;</span><br><span class="line">$getRandom = getRandom(<span class="number">32</span>)</span><br></pre></td></tr></table></figure><h5 id="xml-json互转"><a href="#xml-json互转" class="headerlink" title="xml.json互转"></a>xml.json互转</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工程里边有，懒得再写</span></span><br></pre></td></tr></table></figure><h4 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h4><p>记得要转码。</p><p>必须注意大小写，不然各种简明验证错误，比如appid和appId。</p><p>所有的加密都要一样，都用MD5就行。</p><p>在公众号配置好地址，支付地址只能在公众号配置地址最后一个参数可变化，比如：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www.demo.com/orderdemo/  <span class="comment">//微信公众平台中授权url地址</span></span><br><span class="line">www.demo.com/orderdemo/demo  <span class="comment">//微信浏览器中允许访问的网址</span></span><br></pre></td></tr></table></figure></p><p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=11_1" target="_blank" rel="noopener">SDK地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅为个人学习之用，如有错误欢迎指出&lt;/p&gt;
&lt;p&gt;看了好久微信文档，心里万马奔腾。&lt;/p&gt;
&lt;h4 id=&quot;先获取用户code&quot;&gt;&lt;a href=&quot;#先获取用户code&quot; class=&quot;headerlink&quot; title=&quot;先获取用户code&quot;&gt;&lt;/a&gt;先获取用户code&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/wiki?action=doc&amp;amp;id=mp1421140842&amp;amp;t=0.8761570054860548#4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;https://open.weixin.qq.com/connect/oauth2/authorize?appid=APPID&amp;amp;redirect_uri=REDIRECT_URL&amp;amp;response_type=code&amp;amp;scope=snsapi_base#wechat_redirect&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参数说明：&lt;br&gt;appid：公众号的唯一标识，可以登录到公众平台查看&lt;br&gt;redirect_uri：授权后重定向的回调链接地址，先使用 urlEncode 对链接进行处理，打开个在线转译的转成urlEncode粘贴过来就行了。&lt;br&gt;response_type：返回类型，请填写code，必须是’code’。&lt;br&gt;scope：应用授权作用域，snsapi_base （不弹出授权页面，直接跳转，只能获取用户openid），snsapi_userinfo （弹出授权页面，可通过openid拿到昵称、性别、所在地。并且， 即使在未关注的情况下，只要用户授权，也能获取其信息 ）&lt;br&gt;state：重定向后会带上state参数，开发者可以填写a-zA-Z0-9的参数值，最多128字节（非必需）。&lt;/p&gt;
&lt;p&gt;#wechat_redirect：无论直接打开还是做页面302重定向时候，必须带此参数（必须）。&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>wamp的几个php扩展</title>
    <link href="http://yoursite.com/2018/08/01/wamp%E7%9A%84%E5%87%A0%E4%B8%AAphp%E6%89%A9%E5%B1%95/"/>
    <id>http://yoursite.com/2018/08/01/wamp的几个php扩展/</id>
    <published>2018-08-01T03:05:04.784Z</published>
    <updated>2018-04-17T05:12:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>因工程需要用到的扩展：<a href="http://pecl.php.net/package/redis/" target="_blank" rel="noopener">redis</a>,<a href="http://pecl.php.net/package/SeasLog" target="_blank" rel="noopener">seaslog</a>,<a href="http://pecl.php.net/package/yaf" target="_blank" rel="noopener">yaf</a></p><h2 id="判断是TS还是NTS"><a href="#判断是TS还是NTS" class="headerlink" title="判断是TS还是NTS"></a>判断是TS还是NTS</h2><p>通过phpinfo(); 查看其中的 Thread Safety 项，这个项目就是查看是否是线程安全，如果是：enabled，一般来说应该是ts版，否则是nts版。</p><p><a href="http://localhost/?phpinfo=1" target="_blank" rel="noopener">phpinfo()</a></p><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><p>把下载好的php_redis.dll, php_seaslog.dll, php_yaf.dll 放到D:\wamp64\bin\php\php7.0.23\ext里。</p><a id="more"></a><h4 id="修改php-ini"><a href="#修改php-ini" class="headerlink" title="修改php.ini"></a>修改php.ini</h4><h6 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=php_redis.dll</span><br></pre></td></tr></table></figure><h6 id="seaslog"><a href="#seaslog" class="headerlink" title="seaslog"></a>seaslog</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[SeasLog]</span><br><span class="line">extension=php_seaslog.dll</span><br><span class="line">seaslog.default_basepath=/log/seaslog-test</span><br><span class="line">seaslog.default_logger=default</span><br><span class="line">seaslog.disting_type=1</span><br><span class="line">seaslog.disting_by_hour=1</span><br><span class="line">seaslog.use_buffer=1</span><br><span class="line">seaslog.buffer_size=100</span><br><span class="line">seaslog.level=0</span><br><span class="line">seaslog.trace_error=1</span><br><span class="line">seaslog.trace_exception=0</span><br></pre></td></tr></table></figure><h6 id="yaf"><a href="#yaf" class="headerlink" title="yaf"></a>yaf</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">extension=php_yaf.dll</span><br><span class="line"></span><br><span class="line">[yaf]</span><br><span class="line">yaf.use_namespace = On</span><br><span class="line">yaf.use_spl_autoload = 1</span><br></pre></td></tr></table></figure><h5 id="download"><a href="#download" class="headerlink" title="download"></a>download</h5><p><a href="http://pecl.php.net/package/yaf" target="_blank" rel="noopener">yaf</a>  <a href="http://pecl.php.net/package/redis/" target="_blank" rel="noopener">redis</a>  <a href="http://pecl.php.net/package/SeasLog" target="_blank" rel="noopener">seaslog</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;因工程需要用到的扩展：&lt;a href=&quot;http://pecl.php.net/package/redis/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;redis&lt;/a&gt;,&lt;a href=&quot;http://pecl.php.net/package/SeasLog&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;seaslog&lt;/a&gt;,&lt;a href=&quot;http://pecl.php.net/package/yaf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;yaf&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;判断是TS还是NTS&quot;&gt;&lt;a href=&quot;#判断是TS还是NTS&quot; class=&quot;headerlink&quot; title=&quot;判断是TS还是NTS&quot;&gt;&lt;/a&gt;判断是TS还是NTS&lt;/h2&gt;&lt;p&gt;通过phpinfo(); 查看其中的 Thread Safety 项，这个项目就是查看是否是线程安全，如果是：enabled，一般来说应该是ts版，否则是nts版。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://localhost/?phpinfo=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;phpinfo()&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装配置&quot;&gt;&lt;a href=&quot;#安装配置&quot; class=&quot;headerlink&quot; title=&quot;安装配置&quot;&gt;&lt;/a&gt;安装配置&lt;/h2&gt;&lt;p&gt;把下载好的php_redis.dll, php_seaslog.dll, php_yaf.dll 放到D:\wamp64\bin\php\php7.0.23\ext里。&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>vue-cnode几个作者下的文章</title>
    <link href="http://yoursite.com/2018/08/01/vue-cnode/"/>
    <id>http://yoursite.com/2018/08/01/vue-cnode/</id>
    <published>2018-08-01T03:05:04.776Z</published>
    <updated>2018-04-26T07:45:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅供个人学习，如有错误请指出</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>下载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cxx1357220/vue-cnode.git</span><br></pre></td></tr></table></figure></p><p>安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure></p><a id="more"></a><h4 id="引入vuex和axios"><a href="#引入vuex和axios" class="headerlink" title="引入vuex和axios"></a>引入vuex和axios</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex --save</span><br><span class="line">npm install axios -S</span><br></pre></td></tr></table></figure><p>在main.js中引入<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">Vue.prototype.$axios = axios   <span class="comment">//这样写会使eslint报错，建议关闭</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line">Vue.use(Vuex)</span><br></pre></td></tr></table></figure></p><h4 id="关闭eslint"><a href="#关闭eslint" class="headerlink" title="关闭eslint"></a>关闭eslint</h4><p>找到build文件夹—&gt;webpack.base.conf.js—-&gt;module—-&gt;rules中与eslint相关的注释掉<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>: &#123;</span><br><span class="line">  rules: [</span><br><span class="line">    <span class="comment">// ...(config.dev.useEslint ? [createLintingRule()] : []),</span></span><br><span class="line">    &#123;</span><br><span class="line">      test: <span class="regexp">/\.vue$/</span>,</span><br><span class="line">      loader: <span class="string">'vue-loader'</span>,</span><br><span class="line">      options: vueLoaderConfig</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></p><h4 id="改变vuex里的数据，view里并不能监听到"><a href="#改变vuex里的数据，view里并不能监听到" class="headerlink" title="改变vuex里的数据，view里并不能监听到"></a>改变vuex里的数据，view里并不能监听到</h4><p>改变vuex里的数据，view里并不能监听到，所以用了watch，<br>在computed中写一个计算属性listenTitle,返回状态管理中的headerTitle。然后在watch中监听这个计算属性的变化，对Header.vue中的headerTitle重新赋值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;  </span><br><span class="line">    listenTitle: &#123;  </span><br><span class="line">        get: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.$store.state.headerTitle;</span><br><span class="line">        &#125;              </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;,  </span><br><span class="line">watch: &#123;  </span><br><span class="line">    listenTitle: <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>) </span>&#123;  </span><br><span class="line">        <span class="keyword">this</span>.headerTitle=a;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h4><p>index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">    routes: [&#123;</span><br><span class="line">        path: <span class="string">'/'</span>,</span><br><span class="line">        component: Index,</span><br><span class="line">        name: <span class="string">'Index'</span>,</span><br><span class="line">        children: [</span><br><span class="line">          &#123; <span class="attr">path</span>: <span class="string">'detail'</span>, <span class="attr">component</span>: Detail, <span class="attr">name</span>: <span class="string">'detail'</span> &#125;,</span><br><span class="line">          &#123; <span class="attr">path</span>: <span class="string">'/'</span>, <span class="attr">component</span>: home, <span class="attr">name</span>: <span class="string">'home'</span> &#125;,</span><br><span class="line">          &#123; <span class="attr">path</span>: <span class="string">'article'</span>, <span class="attr">component</span>: article, <span class="attr">name</span>: <span class="string">'article'</span> &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>Index.vue<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"index"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Header</span>&gt;</span><span class="tag">&lt;/<span class="name">Header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h4 id="接口proxyTable"><a href="#接口proxyTable" class="headerlink" title="接口proxyTable"></a>接口proxyTable</h4><p>更改config中的index.js里边的proxyTable</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">proxyTable: &#123;</span><br><span class="line">  <span class="string">'/api'</span>: &#123;</span><br><span class="line">    target: <span class="string">'https://cnodejs.org'</span>, <span class="comment">// 接口的域名</span></span><br><span class="line">    secure: <span class="literal">false</span>, <span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">    changeOrigin: <span class="literal">true</span>, <span class="comment">// 如果接口跨域，需要进行这个参数配置</span></span><br><span class="line">    pathRewrite: &#123;</span><br><span class="line">      <span class="string">'^/api'</span>: <span class="string">'/api/v1'</span>  <span class="comment">//api</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="在手机预览"><a href="#在手机预览" class="headerlink" title="在手机预览"></a>在手机预览</h4><p>更改config中的index.js里边的host，同局域网下手机访问为’192.168.1.158:7777’</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">host: <span class="string">'192.168.1.158'</span>, <span class="comment">// 更改此为你的ip地址</span></span><br><span class="line">port: <span class="number">7777</span>, <span class="comment">// 端口，有可能冲突</span></span><br></pre></td></tr></table></figure><h4 id="组件传值"><a href="#组件传值" class="headerlink" title="组件传值"></a>组件传值</h4><p>原谅我都用了vuex，自从用了vuex，什么bus，props都觉得好难用。</p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="/cnode1.PNG" alt="">,<br><img src="/cnode2.PNG" alt="">,<br><img src="/cnode3.PNG" alt="">,</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅供个人学习，如有错误请指出&lt;/p&gt;
&lt;h4 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h4&gt;&lt;p&gt;下载&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/cxx1357220/vue-cnode.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm run dev&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>twig日期转换</title>
    <link href="http://yoursite.com/2018/08/01/twig%E6%97%A5%E6%9C%9F%E7%9A%84%E5%A4%84%E7%90%86/"/>
    <id>http://yoursite.com/2018/08/01/twig日期的处理/</id>
    <published>2018-08-01T03:05:04.766Z</published>
    <updated>2018-04-13T13:29:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="不同医院后台传出数据为3-2或者3-02，twig获取当前日期为03-02"><a href="#不同医院后台传出数据为3-2或者3-02，twig获取当前日期为03-02" class="headerlink" title="不同医院后台传出数据为3-2或者3-02，twig获取当前日期为03-02"></a>不同医院后台传出数据为3-2或者3-02，twig获取当前日期为03-02</h2><p>后台传出数据为3-2，twig获取当前日期为03-02，进行判断是否为当天的时候两者不相等，所以对后台传出数据在twig内进行转换。</p><p>具体为先转换成3/2格式再转换成03-02.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&#123;&#123; <span class="string">'3-2'</span>|replace(&#123;<span class="string">'-'</span>:<span class="string">'/'</span>&#125;)|date(<span class="string">'m-d'</span>)!=<span class="string">'now'</span>|date(<span class="string">'m-d'</span>) &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">'3-2'</span>|replace(&#123;<span class="string">'-'</span>:<span class="string">'/'</span>&#125;)|date(<span class="string">'m-d'</span>)!=<span class="string">'now'</span>|date(<span class="string">'m-d'</span>) %&#125;</span><br><span class="line">    &lt;div&gt;&#123;&#123; <span class="string">'3-2'</span>|replace(&#123;<span class="string">'-'</span>:<span class="string">'/'</span>&#125;)|date(<span class="string">'m-d'</span>) &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; <span class="string">'now'</span>|date(<span class="string">'m-d'</span>) &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &#123;% <span class="keyword">endif</span> %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;不同医院后台传出数据为3-2或者3-02，twig获取当前日期为03-02&quot;&gt;&lt;a href=&quot;#不同医院后台传出数据为3-2或者3-02，twig获取当前日期为03-02&quot; class=&quot;headerlink&quot; title=&quot;不同医院后台传出数据为3-2或者3-
      
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>reverse()改变原有数组</title>
    <link href="http://yoursite.com/2018/08/01/reverse/"/>
    <id>http://yoursite.com/2018/08/01/reverse/</id>
    <published>2018-08-01T03:05:04.760Z</published>
    <updated>2018-04-26T08:12:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅供个人学习，如有错误请指出</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> reverse_title=<span class="function">(<span class="params">arr</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> titleList=arr;</span><br><span class="line">    <span class="keyword">return</span> titleList.reverse();</span><br><span class="line">&#125;</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="comment">//(2) [1, 2]</span></span><br><span class="line">b=reverse_title(a);</span><br><span class="line"><span class="comment">//(2) [2, 1]</span></span><br><span class="line">a;</span><br><span class="line"><span class="comment">//(2) [2, 1]</span></span><br></pre></td></tr></table></figure><p>解决方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> reverse_title=<span class="function">(<span class="params">arr</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> titleList=arr;</span><br><span class="line">    titleList=titleList.slice();<span class="comment">//数组需要深度copy，不然reverse()会改变原数组</span></span><br><span class="line">    <span class="keyword">return</span> titleList.reverse();</span><br><span class="line">&#125;</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="comment">//(2) [1, 2]</span></span><br><span class="line">b=reverse_title(a);</span><br><span class="line"><span class="comment">//(2) [2, 1]</span></span><br><span class="line">a;</span><br><span class="line"><span class="comment">//(2) [1, 2]</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;仅供个人学习，如有错误请指出&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s
      
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>nodejs获取cnode几个作者下的文章</title>
    <link href="http://yoursite.com/2018/08/01/node_cnode/"/>
    <id>http://yoursite.com/2018/08/01/node_cnode/</id>
    <published>2018-08-01T03:05:04.753Z</published>
    <updated>2018-04-23T11:49:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅供个人学习，如有错误请指出</p><p>第一次体验nodejs。。。</p><h2 id="直接上代码"><a href="#直接上代码" class="headerlink" title="直接上代码"></a>直接上代码</h2><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> axios = <span class="built_in">require</span>(<span class="string">'axios'</span>),</span><br><span class="line">    express = <span class="built_in">require</span>(<span class="string">'express'</span>),</span><br><span class="line">    app = express();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = <span class="string">'JacksonTian,JacksonTian,imzengyang,JZLeung,six-666,vanishcode,chuanzai,huanz,zhangshiqiu,i5ting,Hyurl,D8Ge,spursy,wangchaoduo,JerrysShan,FrankDiao,heguangda,ITCNZ,yuu2lee4,jizhuofeng,MasterShu,2596887568,lvyueyang,lvyueyang,Aoqin,seekcx,zhunrong,vpntj,lovegnep,JerrysShan,vipzrx,hyrlh,superway117,zy445566,DoubleCG,liuzhiguo11,mrlong,quanpf2481,thebingepig,343830384'</span>;</span><br><span class="line">arr = <span class="built_in">Array</span>.from(<span class="keyword">new</span> <span class="built_in">Set</span>(arr.split(<span class="string">","</span>)));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api_url = <span class="string">'https://cnodejs.org/api/v1/user/'</span>,</span><br><span class="line">    article_url = <span class="string">'https://cnodejs.org/topic/'</span>;</span><br><span class="line">arr_url = arr.map(<span class="function"><span class="params">x</span> =&gt;</span> api_url + x);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> axios_out = <span class="function">(<span class="params">id</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        axios(&#123;</span><br><span class="line">            method: <span class="string">'get'</span>,</span><br><span class="line">            url: article_url + id,</span><br><span class="line">        &#125;)</span><br><span class="line">            .then(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> match_topic_title = response.data.match(<span class="regexp">/(&lt;span class="topic_full_title"&gt;)([\s\r\n\t\S]*?)(&lt;div)/</span>); <span class="comment">//正则文章题目</span></span><br><span class="line">                <span class="keyword">let</span> match_topic = response.data.match(<span class="regexp">/(&lt;div class='topic_content'&gt;)([\s\r\n\t\S]*?)(&lt;\/div&gt;)/</span>); <span class="comment">//正则文章div</span></span><br><span class="line">                <span class="keyword">let</span> words = [match_topic_title[<span class="number">2</span>].replace(<span class="regexp">/&lt;\/?.+?&gt;/g</span>, <span class="string">""</span>).replace(<span class="regexp">/[\r\n\ +]/g</span>, <span class="string">""</span>), match_topic[<span class="number">2</span>].replace(<span class="regexp">/&lt;\/?.+?&gt;/g</span>, <span class="string">""</span>)];  <span class="comment">//除去html标签</span></span><br><span class="line">                resolve(words);  <span class="comment">//传出成功状态参数</span></span><br><span class="line">            &#125;)</span><br><span class="line">            .catch(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">                reject(error);</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timeout</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">reject,resolve</span>) =&gt;</span> &#123;<span class="comment">// (reject,resolve)这两个参数，谁第一个代表成功，第二个代表失败，无论取名如何。</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;resolve(ms+<span class="string">'ms内并发超时，执行继发'</span>)&#125;, ms);   <span class="comment">//给失败状态传值</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> get_list= <span class="keyword">async</span> (id)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> article = &#123;</span><br><span class="line">        id: id,</span><br><span class="line">    &#125;;    </span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        article.words = <span class="keyword">await</span> axios_out(id);<span class="comment">//获取文章纯文本内容</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'axios_out:'</span> + id + <span class="string">':'</span> + e);</span><br><span class="line">        <span class="keyword">return</span> get_list(id);  <span class="comment">//失败后重新执行</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> article;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> try_arr = <span class="keyword">async</span> (url) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> get_axios = <span class="keyword">await</span> axios.get(url); <span class="comment">//axios为 Promise 对象</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'try_arr'</span> + e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> author_all = &#123;&#125;;      <span class="comment">//作者下的所有</span></span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        <span class="keyword">let</span> arr_id = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; get_axios.data.data.recent_topics.length; i++) &#123;</span><br><span class="line">            arr_id.push(get_axios.data.data.recent_topics[i].id);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> article_list = <span class="keyword">await</span> <span class="built_in">Promise</span>.race([<span class="built_in">Promise</span>.all(arr_id.map(<span class="function"><span class="params">x</span>=&gt;</span>get_list(x))),timeout(<span class="number">5000</span>)]); <span class="comment">//设定时间内超时则传回失败状态。       </span></span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(e);</span><br><span class="line">        <span class="keyword">var</span> article_list = [];    <span class="comment">//文章列表</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; get_axios.data.data.recent_topics.length; i++) &#123;  <span class="comment">//循环插入文章id到文章列表</span></span><br><span class="line">            <span class="keyword">let</span> article = &#123;</span><br><span class="line">                id: get_axios.data.data.recent_topics[i].id,</span><br><span class="line">            &#125;;                               <span class="comment">//单条文章json</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                article.words = <span class="keyword">await</span> axios_out(get_axios.data.data.recent_topics[i].id);<span class="comment">//获取文章纯文本内容</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'axios_out:'</span> + get_axios.data.data.recent_topics[i].id + <span class="string">':'</span> + e)</span><br><span class="line">            &#125;</span><br><span class="line">            article_list.push(article);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    author_all.author = get_axios.data.data.loginname;  <span class="comment">//作者下的文章拼装成json</span></span><br><span class="line">    author_all.article_list = article_list;</span><br><span class="line">    <span class="keyword">return</span> author_all;   <span class="comment">//输出</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// const try_all = async function(arr)&#123;        //promise.all封装</span></span><br><span class="line"><span class="comment">//     return Promise.all(arr.map(x=&gt;try_arr(x)));   //只能所有的状态都为resolve，peomise.all的问题。</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> try_all = <span class="keyword">async</span> (arr) =&gt; &#123;        <span class="comment">//继发，并发太多会触发服务器503</span></span><br><span class="line">    <span class="keyword">let</span> arr_out = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            arr_out[i] = <span class="keyword">await</span> try_arr(arr[i]);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'get:'</span> + (i + <span class="number">1</span>)+<span class="string">'/'</span>+arr.length + <span class="string">':'</span> + arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'error:'</span> + (i + <span class="number">1</span>)+<span class="string">'/'</span>+arr.length + <span class="string">':'</span> + arr[i]);</span><br><span class="line">            arr_out[i] = e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr_out;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> listen = <span class="function"><span class="params">arr_url</span> =&gt;</span> &#123; </span><br><span class="line">    try_all(arr_url).then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">        app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;   <span class="comment">//express输出，http输出json报错</span></span><br><span class="line">            res.send(result);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> server = app.listen(<span class="number">8081</span>,<span class="string">"127.0.0.1"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> host = server.address().address,</span><br><span class="line">                port = server.address().port;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"应用实例，访问地址为 http://%s:%s"</span>, host, port);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">        .catch(<span class="function"><span class="params">e</span> =&gt;</span> <span class="built_in">console</span>.log(e));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">listen(arr_url);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅供个人学习，如有错误请指出&lt;/p&gt;
&lt;p&gt;第一次体验nodejs。。。&lt;/p&gt;
&lt;h2 id=&quot;直接上代码&quot;&gt;&lt;a href=&quot;#直接上代码&quot; class=&quot;headerlink&quot; title=&quot;直接上代码&quot;&gt;&lt;/a&gt;直接上代码&lt;/h2&gt;
    
    </summary>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>mock模拟数据，拦截请求</title>
    <link href="http://yoursite.com/2018/08/01/mock/"/>
    <id>http://yoursite.com/2018/08/01/mock/</id>
    <published>2018-08-01T03:05:04.743Z</published>
    <updated>2018-04-13T13:25:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅为个人学习之用，如有错误欢迎指出</p><p>在后端工程师没写好后台的时候怎么办？我们可以用mock模拟数据用于请求，然后把数据格式扔给后端写接口就完事了。</p><p>当然除了mock at back-end programmer外，对一些不可确定的数据的效果，也可以用mock模拟。</p><h2 id="mock"><a href="#mock" class="headerlink" title="mock"></a>mock</h2><p><a href="https://github.com/nuysoft/Mock/wiki/Getting-Started" target="_blank" rel="noopener">github_wiki地址</a></p><a id="more"></a><h4 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h4><p>在vue的安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mockjs --save</span><br></pre></td></tr></table></figure><p>在vue的使用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Mock <span class="keyword">from</span> <span class="string">'mockjs'</span></span><br><span class="line"><span class="keyword">import</span> loginAPI <span class="keyword">from</span> <span class="string">'./login'</span></span><br><span class="line"></span><br><span class="line">Mock.mock(<span class="regexp">/\/user\/login/</span>, <span class="string">'post'</span>, loginAPI.loginByUsername)</span><br><span class="line"><span class="comment">//匹配url最后为user/login，请求方式为post的请求时，拦截该请求并返回login.js中loginByUsername方法的return值。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅为个人学习之用，如有错误欢迎指出&lt;/p&gt;
&lt;p&gt;在后端工程师没写好后台的时候怎么办？我们可以用mock模拟数据用于请求，然后把数据格式扔给后端写接口就完事了。&lt;/p&gt;
&lt;p&gt;当然除了mock at back-end programmer外，对一些不可确定的数据的效果，也可以用mock模拟。&lt;/p&gt;
&lt;h2 id=&quot;mock&quot;&gt;&lt;a href=&quot;#mock&quot; class=&quot;headerlink&quot; title=&quot;mock&quot;&gt;&lt;/a&gt;mock&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/nuysoft/Mock/wiki/Getting-Started&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;github_wiki地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="mock" scheme="http://yoursite.com/tags/mock/"/>
    
  </entry>
  
  <entry>
    <title>lnmp隐藏phpmyadmin访问</title>
    <link href="http://yoursite.com/2018/08/01/lnmp%E9%9A%90%E8%97%8Fphpmyadmin/"/>
    <id>http://yoursite.com/2018/08/01/lnmp隐藏phpmyadmin/</id>
    <published>2018-08-01T03:05:04.735Z</published>
    <updated>2018-04-13T13:26:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅为个人学习之用，如有错误欢迎指出</p><p>phpmyadmin默认的位置很容易被人才到，一般都是域名或IP/phpmyadmin这个位置，所以有必要为phpmyadmin目录重命名来提高安全性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /home/wwwroot/default/</span><br><span class="line"></span><br><span class="line">mv phpmyadmin phpmyadmin-change</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;仅为个人学习之用，如有错误欢迎指出&lt;/p&gt;
&lt;p&gt;phpmyadmin默认的位置很容易被人才到，一般都是域名或IP/phpmyadmin这个位置，所以有必要为phpmyadmin目录重命名来提高安全性。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;
      
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Laravel数据库获取数据</title>
    <link href="http://yoursite.com/2018/08/01/Laravel%E6%95%B0%E6%8D%AE%E5%BA%93%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2018/08/01/Laravel数据库获取数据/</id>
    <published>2018-08-01T03:05:04.728Z</published>
    <updated>2018-04-13T13:22:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Laravel获取表数据"><a href="#Laravel获取表数据" class="headerlink" title="Laravel获取表数据"></a>Laravel获取表数据</h2><p><a href="http://laravelacademy.org/post/6955.html" target="_blank" rel="noopener">Laravel文档</a></p><h4 id="获取多条数据中的某值"><a href="#获取多条数据中的某值" class="headerlink" title="获取多条数据中的某值"></a>获取多条数据中的某值</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$msgtype=MessageBizConfigModel::where(<span class="string">'config_id'</span>,<span class="string">'='</span>,$apptypeid)-&gt;get();</span><br><span class="line"><span class="keyword">foreach</span> ($msgtype <span class="keyword">as</span> $msgtypelist)&#123;</span><br><span class="line">    $typeid = $msgtypelist-&gt;id;</span><br><span class="line">    $typedesc = $msgtypelist-&gt;desc;</span><br><span class="line">    array_push($typeArr,[<span class="string">'name'</span> =&gt; $typedesc, <span class="string">'value'</span> =&gt; $typeid]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="获取多行中的某列值的数组"><a href="#获取多行中的某列值的数组" class="headerlink" title="获取多行中的某列值的数组"></a>获取多行中的某列值的数组</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$msgtype=MessageBizConfigModel::where(<span class="string">'config_id'</span>,<span class="string">'='</span>,$apptypeid)-&gt;pluck(<span class="string">'desc'</span>);</span><br></pre></td></tr></table></figure><h4 id="获取单行中的某列值"><a href="#获取单行中的某列值" class="headerlink" title="获取单行中的某列值"></a>获取单行中的某列值</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$apptypeid=MessageConfigModel::where(<span class="string">'app_id'</span>,<span class="string">'='</span>,$appid)-&gt;value(<span class="string">'id'</span>)</span><br></pre></td></tr></table></figure><h4 id="获取条件下的行数"><a href="#获取条件下的行数" class="headerlink" title="获取条件下的行数"></a>获取条件下的行数</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$msgerror=MessageRecordModel::where(<span class="string">'appkey'</span>,<span class="string">'='</span>,$appid)-&gt;where(<span class="string">'created_at'</span>,<span class="string">'&lt;='</span>,$enddate)-&gt;where(<span class="string">'succeed'</span>,<span class="string">'='</span>,<span class="string">'1'</span>)-&gt;count();</span><br></pre></td></tr></table></figure><h4 id="获取表中所有数据"><a href="#获取表中所有数据" class="headerlink" title="获取表中所有数据"></a>获取表中所有数据</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$apptable=MessageConfigModel::all()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Laravel获取表数据&quot;&gt;&lt;a href=&quot;#Laravel获取表数据&quot; class=&quot;headerlink&quot; title=&quot;Laravel获取表数据&quot;&gt;&lt;/a&gt;Laravel获取表数据&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://laravelacademy.org/post/6955.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Laravel文档&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;获取多条数据中的某值&quot;&gt;&lt;a href=&quot;#获取多条数据中的某值&quot; class=&quot;headerlink&quot; title=&quot;获取多条数据中的某值&quot;&gt;&lt;/a&gt;获取多条数据中的某值&lt;/h4&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$msgtype=MessageBizConfigModel::where(&lt;span class=&quot;string&quot;&gt;&#39;config_id&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt;,$apptypeid)-&amp;gt;get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt; ($msgtype &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; $msgtypelist)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $typeid = $msgtypelist-&amp;gt;id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $typedesc = $msgtypelist-&amp;gt;desc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    array_push($typeArr,[&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt; =&amp;gt; $typedesc, &lt;span class=&quot;string&quot;&gt;&#39;value&#39;&lt;/span&gt; =&amp;gt; $typeid]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://yoursite.com/tags/php/"/>
    
      <category term="Laravel" scheme="http://yoursite.com/tags/Laravel/"/>
    
  </entry>
  
  <entry>
    <title>es6 异步的学习</title>
    <link href="http://yoursite.com/2018/08/01/es6%E5%BC%82%E6%AD%A5/"/>
    <id>http://yoursite.com/2018/08/01/es6异步/</id>
    <published>2018-08-01T03:05:04.722Z</published>
    <updated>2018-04-13T13:25:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>仅为个人学习之用，如有错误欢迎指出</p><h2 id="async"><a href="#async" class="headerlink" title="async"></a>async</h2><p>async 是异步编程的一种解决方案，通过async和await进行处理，await后边跟随Promise对象，当Promise对象状态发生变化时才会执行后边的代码，async函数的return值会成为.then()的参数，只有在async函数里边的所有await都成功时才会执行.then()。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getStockPriceByName</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> symbol = <span class="keyword">await</span> getStockSymbol(name);</span><br><span class="line">  <span class="keyword">const</span> stockPrice = <span class="keyword">await</span> getStockPrice(symbol);</span><br><span class="line">  <span class="keyword">return</span> stockPrice;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getStockPriceByName(<span class="string">'goog'</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(result);   <span class="comment">//goog</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>为了避免这种情况，我们可以用try…catch方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> symbol = <span class="keyword">await</span> getStockSymbol(name);;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> symbol;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="promise"><a href="#promise" class="headerlink" title="promise"></a>promise</h2><p>Promise 是异步编程的一种解决方案，Promise有两个状态变化，即从 pending 变为 resolved 和 pending 变为 rejected，Promise.then()为在状态变化后分别指定resolved状态和rejected状态的回调函数。then方法的第一个参数是resolved状态的回调函数，第二个参数（可选）是rejected状态的回调函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// axios请求</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">xml</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      axios.get(<span class="string">'/api'</span>+ ms).then(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">          resolve()</span><br><span class="line">      &#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">          reject()</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">xml(<span class="number">100</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// success后执行函数的代码</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// failure后执行函数的代码</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>不断的执行函数可以</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">xml(<span class="number">100</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// success后执行函数的代码</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// failure后执行函数的代码</span></span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;     <span class="comment">//上一个函数执行状态完成后</span></span><br><span class="line">  <span class="comment">// success后执行函数的代码</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// failure后执行函数的代码</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Promise.catch()跟Promise.then()的第二个参数一个意思，都是返回的reject状态，建议用catch()可读性较强。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;···&#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;···&#125;)</span><br></pre></td></tr></table></figure><p>Promise.finally()为状态变化后都会执行的，不管resolved还是reject都会执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;···&#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;···&#125;).finally(<span class="function"><span class="params">()</span> =&gt;</span> &#123;···&#125;);</span><br></pre></td></tr></table></figure><p>还有Promise.all([])和Promise.race([])方法，Promise.all([])方法为里边的异步都执行完之后才改变状态，promise.all 中任何一个promise 出现错误的时候都会执行reject ，而且获取不到其中是哪个的错误。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="built_in">Promise</span>.all([a,b]);</span><br><span class="line">p.then(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(val);<span class="comment">//结果：['aaa','bbb']</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Promise.race([])方法只会输出其中最快完成的方法的值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="built_in">Promise</span>.race([a,b]);</span><br><span class="line">p.then(<span class="function"><span class="keyword">function</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(val);<span class="comment">//结果：'bbb'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仅为个人学习之用，如有错误欢迎指出&lt;/p&gt;
&lt;h2 id=&quot;async&quot;&gt;&lt;a href=&quot;#async&quot; class=&quot;headerlink&quot; title=&quot;async&quot;&gt;&lt;/a&gt;async&lt;/h2&gt;&lt;p&gt;async 是异步编程的一种解决方案，通过async和await进行处理，await后边跟随Promise对象，当Promise对象状态发生变化时才会执行后边的代码，async函数的return值会成为.then()的参数，只有在async函数里边的所有await都成功时才会执行.then()。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getStockPriceByName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; symbol = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getStockSymbol(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; stockPrice = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getStockPrice(symbol);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; stockPrice;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getStockPriceByName(&lt;span class=&quot;string&quot;&gt;&#39;goog&#39;&lt;/span&gt;).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(result);   &lt;span class=&quot;comment&quot;&gt;//goog&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;为了避免这种情况，我们可以用try…catch方法。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;myFunction&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; symbol = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; getStockSymbol(name);;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; symbol;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
</feed>
